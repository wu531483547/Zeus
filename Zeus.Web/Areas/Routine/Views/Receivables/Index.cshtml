
@{
    ViewBag.Title = "机动车查验业务收款";
    var X = Html.X();
}
@section header{
    <script src="~/Content/js/Zeus.js"></script>
    <script type="text/javascript">
        var AddRecord = function () {
            this.up('form').getForm().reset();
            App.GP_Left.getSelectionModel().clearSelections();
            App.GP_Left.getView().refresh();
        };
        var SaveRecord = function () {
            if (App.FP_Right.getForm().isValid()) {
                $.loading(true, "正在提交数据...");
                window.setTimeout(function () {
                    $.ajax({
                        url: "/Routine/CarCheck/SaveSingle",
                        loading: "正在提交数据...",
                        type: "post",
                        dataType: "json",
                        data: {
                            __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                            fpValue: Ext.encode(App.FP_Right.getForm().getValues()),
                            keyValue: App.GP_Left.getSelectionModel().hasSelection() ?
                                App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id : ''
                        },
                        success: function (result) {
                            if (result.state == "success") {
                                $.modalMsg(result.message, result.state);
                                App.FP_Right.getForm().reset();
                                App.GP_Left.store.reload();
                                App.GP_Left.getSelectionModel().clearSelections();
                                App.GP_Left.getView().refresh();
                            } else {
                                $.modalAlert(result.message, result.state);
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $.loading(false);
                            $.modalMsg(errorThrown, "error");
                        },
                        complete: function () {
                            $.loading(false);
                        }
                    });
                }, 500);
            }
            else {
                return false;
            }
        };
        var DeleteRecord = function () {
            if (App.GP_Left.getSelectionModel().hasSelection()) {
                $.modalConfirm("注：您确定要删除该项数据吗？", function (r) {
                    if (r) {
                        $.loading(true, "正在提交数据...");
                        window.setTimeout(function () {
                            $.ajax({
                                url: "/Routine/CarCheck/DeleteSingle",
                                loading: "正在提交数据...",
                                type: "post",
                                dataType: "json",
                                data: {
                                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                                    keyValue: App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id
                                },
                                success: function (result) {
                                    if (result.state == "success") {
                                        $.modalMsg(result.message, result.state);
                                        App.FP_Right.getForm().reset();
                                        App.GP_Left.store.reload();
                                        App.GP_Left.getSelectionModel().clearSelections();
                                        App.GP_Left.getView().refresh();
                                    } else {
                                        $.modalAlert(result.message, result.state);
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    $.loading(false);
                                    $.modalMsg(errorThrown, "error");
                                },
                                complete: function () {
                                    $.loading(false);
                                }
                            });
                        }, 500);
                    }
                });
            }
            else {
                $.modalMsg("请至少选中一条明细进行操作！");
            }
        };
        var PrintRecord = function () {
            if (App.GP_Left.getSelectionModel().hasSelection()) {
                var TempID = App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id;
                var TempUrl = GetRootPath() + '/Routine/CarCheck/Print?keyValue=' + TempID;
                window.parent.open(TempUrl)
            }
            else {
                $.modalMsg("请至少选中一条明细进行操作！");
            }
        };
        var SelectedRecord = function (e, row) {
            if (row[0]) {
                this.up('form').getForm().reset();
                this.up('form').getForm().loadRecord(row[0]);
            }
        };
    </script>
    @*<style type="text/css">
        .x-form-checkbox-default {
            width: 30px;
            height: 30px;
        }
    </style>*@
}
@(X.Viewport().Layout(LayoutType.Fit).Items(
        X.FormPanel().ID("FP_Main").Layout(LayoutType.Border).StyleSpec("border:1px solid #DFDFDF;").Items(
            X.GridPanel().ID("GP_Left").Region(Region.West).Width(380)
            .StyleSpec("border:1px solid #DFDFDF;border-left:0px;border-right:0px;")
            .Store(X.Store().ID("S_Left").Parameters(new
            {
                BeginTime = JRawValue.From("App.DF_BeginTime.getValue() == null ? null : App.DF_BeginTime.getValue()"),
                EndTime = JRawValue.From("App.DF_EndTime.getValue() == null ? null : App.DF_EndTime.getValue()")
            }
            ).Proxy(X.AjaxProxy().Url(Url.Action("GetList"))
            .Reader(X.JsonReader().RootProperty("data").TotalProperty("total")))).ColumnModel(
                X.RowNumbererColumn().Align(Alignment.Center).Text("序号").Width(50),
                X.Column().Text("收款单号").DataIndex("F_1").Filter(X.StringFilter().EmptyText("输入收款单号")).Width(180),
                X.DateColumn().Text("收款时间").DataIndex("F_CreatorTime").Format("yyyy-MM-dd HH:mm:ss").Width(150))
            .View(X.GridView().EnableTextSelection(true).StripeRows(true).LoadingText("正在努力加载中"))
            .Plugins(X.CellEditing(), X.GridFilters().MenuFilterText("查询")).Listeners(l => l.SelectionChange.Fn = "SelectedRecord"),
            X.FormPanel().ID("FP_Right").StyleSpec("border:1px solid #DFDFDF;border-right:0px;").AutoScroll(true)
            .Layout(LayoutType.Form).Region(Region.Center).BodyStyle("overflow-x:visible;overflow-y:hidden").Items(
                X.FieldSet().Title("收款明细").FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; })
                .Layout(LayoutType.Table).LayoutConfig(new TableLayoutConfig() { Columns = 3 }).Collapsible(true).PaddingSpec("3").Items(
                    X.ComboBox().FieldLabel("车辆类型").Name("F_2").Text("小型汽车").AllowBlank(false).Items(
                        X.ListItem().Text("大型汽车"),
                        X.ListItem().Text("小型汽车")),
                    X.ComboBox().FieldLabel("车辆类别").Name("F_3").Text("旧车").AllowBlank(false).Items(
                        X.ListItem().Text("新车"),
                        X.ListItem().Text("旧车")),
                    X.DateField().FieldLabel("收款时间").Format("yyyy-MM-dd HH:mm:ss").ReadOnly(true)
                        .Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false),
                    X.NumberField().FieldLabel("收费金额").Name("F_5").AllowBlank(false).MinValue(0).MarginSpec("20px 0px 0px 0px"),
                    X.TextField().FieldLabel("金额大写").Name("F_Remakes").MarginSpec("20px 0px 0px 0px"),
                    X.Checkbox().BoxLabel("是否记账").BoxLabelAlign(BoxLabelAlign.Before).MarginSpec("20px 0px 0px 30px").Name("F_22"),
                    X.TextField().FieldLabel("借款人员").Name("F_Remakes").MarginSpec("20px 0px 20px 0px"),
                    X.TextField().FieldLabel("备注").Name("F_Remakes").MarginSpec("20px 0px 20px 0px")),
                X.FieldSet().Title("收款项目").LayoutConfig(new TableLayoutConfig() { Columns = 6 }).Layout(LayoutType.Table)
                    .Collapsible(true).PaddingSpec("3").Items(
                        X.Checkbox().BoxLabel("磨号").InputWidth(30).BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"),
                        X.Checkbox().BoxLabel("门字").BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"),
                        X.Checkbox().BoxLabel("照相").BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"),
                        X.Checkbox().BoxLabel("载重量").BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"),
                        X.Checkbox().BoxLabel("扩大号").BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"),
                        X.Checkbox().BoxLabel("人数").BoxLabelAlign(BoxLabelAlign.Before).Name("F_22").MarginSpec("20px 0px 20px 30px"))))
        .TopBar(X.Toolbar().Items(
            X.DateField().ID("DF_BeginTime").FieldLabel("开始时间").Format("yyyy-MM-dd").LabelWidth(60).Width(180)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.DateField().ID("DF_EndTime").FieldLabel("截至时间").Format("yyyy-MM-dd").LabelWidth(60).Width(180)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.Button().Text("新增").Icon(Icon.Add).Width(80).Listeners(ls => ls.Click.Fn = "AddRecord"),
            X.Button().Text("保存").Icon(Icon.Disk).Listeners(ls => ls.Click.Fn = "SaveRecord"),
            X.Button().Text("打印").Icon(Icon.Printer).Width(80).Listeners(ls => ls.Click.Fn = "PrintRecord"),
            X.Button().Text("删除").Width(80).Icon(Icon.Delete).Listeners(ls => ls.Click.Fn = "DeleteRecord"),
            X.Button().Text("清空输入").Icon(Icon.Cancel).OnClientClick("#{FP_Right}.reset();"),
            X.Button().Text("刷新").Icon(Icon.Reload).Width(80).OnClientClick("#{S_Left}.reload();")))))
