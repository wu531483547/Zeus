
@{
    ViewBag.Title = "机动车查验业务收款";
    var X = Html.X();
}
@section header{
    <script src="~/Content/js/Zeus.js"></script>
    <script type="text/javascript">
        var AddRecord = function () {
            this.up('form').getForm().reset();
            App.GP_Left.getSelectionModel().clearSelections();
            App.GP_Left.getView().refresh();
        };
        var SaveRecord = function () {
            if (App.FP_Right.getForm().isValid()) {
                $.loading(true, "正在提交数据...");
                window.setTimeout(function () {
                    $.ajax({
                        url: "/Routine/Receivables/SaveSingle",
                        loading: "正在提交数据...",
                        type: "post",
                        dataType: "json",
                        data: {
                            __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                            fpValue: Ext.encode(App.FP_Right.getForm().getValues()),
                            keyValue: App.GP_Left.getSelectionModel().hasSelection() ?
                                App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id : ''
                        },
                        success: function (result) {
                            if (result.state == "success") {
                                //$.modalMsg(result.message, result.state);
                                App.FP_Right.getForm().reset();
                                App.GP_Left.store.reload();
                                App.GP_Left.getSelectionModel().clearSelections();
                                App.GP_Left.getView().refresh();
                            } else {
                                $.modalAlert(result.message, result.state);
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $.loading(false);
                            $.modalMsg(errorThrown, "error");
                        },
                        complete: function () {
                            $.loading(false);
                        }
                    });
                }, 300);
            }
            else {
                return false;
            }
        };
        var PrintRecord = function () {
            if (App.GP_Left.getSelectionModel().hasSelection()) {
                var TempID = App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id;
                var TempUrl = GetRootPath() + '/Routine/Receivables/Print?keyValue=' + TempID;
                window.parent.open(TempUrl)
            }
            else {
                $.modalMsg("请至少选中一条明细进行操作！");
            }
        };
        var SelectedRecord = function (e, row) {
            if (row[0]) {
                this.up('form').getForm().reset();
                this.up('form').getForm().loadRecord(row[0]);
            }
        };
        var GetDXJE = function () {
            var vDXJE = smalltoBIG(App.NF_SFJE.getValue());
            App.TF_JEDX.setValue(vDXJE);
        };
        var SumCount = function () {
            $.ajax({
                url: "/Routine/Receivables/GetSumInfo",
                data: { beginDate: formatExtTime(App.DF_BeginTime.getValue()), endDate: formatExtTime(App.DF_EndTime.getValue()) },
                dataType: "json",
                async: false,
                success: function (data) {
                    App.TF_EnableCount.setValue(data.vEnableCount + "条");
                    App.TF_DisableCount.setValue(data.vDisableCount + "条");
                    App.TF_Sum.setValue(data.vSum + "元");
                }
            });
        };
        var RepaymentRecord = function () {
            $.loading(true, "正在提交数据...");
            $.ajax({
                url: "/Routine/Receivables/RepaymentRecord",
                loading: "正在提交数据...",
                type: "post",
                dataType: "json",
                data: {
                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                    keyValue: App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id
                },
                success: function (result) {
                    if (result.state == "success") {
                        //$.modalMsg(result.message, result.state);
                        App.FP_Right.getForm().reset();
                        App.GP_Left.store.reload();
                        App.GP_Left.getSelectionModel().clearSelections();
                        App.GP_Left.getView().refresh();
                    } else {
                        $.modalAlert(result.message, result.state);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.modalMsg(errorThrown, "error");
                },
                complete: function () {
                    $.loading(false);
                }
            });
        };
        var InvalidRecord = function () {
            $.loading(true, "正在提交数据...");
            $.ajax({
                url: "/Routine/Receivables/InvalidRecord",
                loading: "正在提交数据...",
                type: "post",
                dataType: "json",
                data: {
                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                    keyValue: App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id
                },
                success: function (result) {
                    if (result.state == "success") {
                        //$.modalMsg(result.message, result.state);
                        App.FP_Right.getForm().reset();
                        App.GP_Left.store.reload();
                        App.GP_Left.getSelectionModel().clearSelections();
                        App.GP_Left.getView().refresh();
                    } else {
                        $.modalAlert(result.message, result.state);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.modalMsg(errorThrown, "error");
                },
                complete: function () {
                    $.loading(false);
                }
            });
        };
        var RecoveryInvalidRecord = function () {
            $.loading(true, "正在提交数据...");
            $.ajax({
                url: "/Routine/Receivables/RecoveryInvalidRecord",
                loading: "正在提交数据...",
                type: "post",
                dataType: "json",
                data: {
                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                    keyValue: App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id
                },
                success: function (result) {
                    if (result.state == "success") {
                        //$.modalMsg(result.message, result.state);
                        App.FP_Right.getForm().reset();
                        App.GP_Left.store.reload();
                        App.GP_Left.getSelectionModel().clearSelections();
                        App.GP_Left.getView().refresh();
                    } else {
                        $.modalAlert(result.message, result.state);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.modalMsg(errorThrown, "error");
                },
                complete: function () {
                    $.loading(false);
                }
            });
        };
    </script>
}
@(X.Viewport().Layout(LayoutType.Fit).Items(
        X.FormPanel().ID("FP_Main").Layout(LayoutType.Border).StyleSpec("border:1px solid #DFDFDF;").Items(
            X.GridPanel().ID("GP_Left").Region(Region.West).Width(350)
            .StyleSpec("border:1px solid #DFDFDF;border-left:0px;border-right:0px;")
            .Store(X.Store().ID("S_Left").Parameters(new
            {
                BeginTime = JRawValue.From("App.DF_BeginTime.getValue() == null ? null : App.DF_BeginTime.getValue()"),
                EndTime = JRawValue.From("App.DF_EndTime.getValue() == null ? null : App.DF_EndTime.getValue()"),
                Take = JRawValue.From("App.CB_Take.getValue() == null ? null : App.CB_Take.getValue()")
            }
            ).Proxy(X.AjaxProxy().Url(Url.Action("GetList"))
            .Reader(X.JsonReader().RootProperty("data").TotalProperty("total")))).ColumnModel(
                X.RowNumbererColumn().Align(Alignment.Center).Text("序号").Width(50),
                X.Column().Text("收款单号").DataIndex("F_SKDH").Filter(X.StringFilter().EmptyText("输入收款单号")).Width(150),
                X.DateColumn().Text("收款时间").DataIndex("F_CreatorTime").Format("yyyy-MM-dd HH:mm:ss").Width(150))
            .View(X.GridView().EnableTextSelection(true).StripeRows(true).LoadingText("正在努力加载中"))
            .Plugins(X.CellEditing(), X.GridFilters().MenuFilterText("查询")).Listeners(l => l.SelectionChange.Fn = "SelectedRecord"),
            X.FormPanel().ID("FP_Right").StyleSpec("border:1px solid #DFDFDF;border-right:0px;").AutoScroll(true)
            .Layout(LayoutType.Form).Region(Region.Center).BodyStyle("overflow-x:visible;overflow-y:hidden").Items(
                X.FieldSet().Title("收款明细").FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; })
                .Layout(LayoutType.Table).LayoutConfig(new TableLayoutConfig() { Columns = 2 }).Collapsible(true).PaddingSpec("3").Items(
                    X.ComboBox().FieldLabel("车辆类型").Name("F_CLLX").Text("小型汽车").MarginSpec("10px 0px 10px 0px")
                    .AllowBlank(false).Items(
                        X.ListItem().Text("大型汽车"),
                        X.ListItem().Text("小型汽车"),
                        X.ListItem().Text("使馆汽车"),
                        X.ListItem().Text("领馆汽车"),
                        X.ListItem().Text("境外汽车"),
                        X.ListItem().Text("外籍汽车"),
                        X.ListItem().Text("普通摩托车"),
                        X.ListItem().Text("轻便摩托车"),
                        X.ListItem().Text("使馆摩托车"),
                        X.ListItem().Text("领馆摩托车"),
                        X.ListItem().Text("境外摩托车"),
                        X.ListItem().Text("外籍摩托车"),
                        X.ListItem().Text("低速车"),
                        X.ListItem().Text("拖拉机"),
                        X.ListItem().Text("挂车"),
                        X.ListItem().Text("教练汽车"),
                        X.ListItem().Text("教练摩托车"),
                        X.ListItem().Text("试验汽车"),
                        X.ListItem().Text("试验摩托车"),
                        X.ListItem().Text("临时入境汽车"),
                        X.ListItem().Text("临时入境摩托车"),
                        X.ListItem().Text("临时行驶车"),
                        X.ListItem().Text("警用汽车"),
                        X.ListItem().Text("警用摩托"),
                        X.ListItem().Text("原农机号牌"),
                        X.ListItem().Text("香港入出境车"),
                        X.ListItem().Text("澳门入出境车"),
                        X.ListItem().Text("武警号牌"),
                        X.ListItem().Text("军队号牌"),
                        X.ListItem().Text("无号牌"),
                        X.ListItem().Text("假号牌"),
                        X.ListItem().Text("挪用号牌"),
                        X.ListItem().Text("其他号牌")),
                    X.ComboBox().FieldLabel("车辆类别").Name("F_CLLB").Text("新车").AllowBlank(false).Items(
                        X.ListItem().Text("新车"),
                        X.ListItem().Text("旧车")).MarginSpec("10px 0px 10px 0px"),
                    X.DateField().FieldLabel("收款时间").Format("yyyy-MM-dd HH:mm:ss").ReadOnly(true)
                        .Text(@DateTime.Now.ToString()).AutoDataBind(true).Editable(false).MarginSpec("10px 0px 10px 0px"),
                    X.NumberField().ID("NF_SFJE").FieldLabel("收费金额").Name("F_SFJE").AllowBlank(false).MinValue(0)
                    .Listeners(ls => ls.Change.Fn = "GetDXJE").MarginSpec("10px 0px 10px 0px"),
                    X.TextField().ID("TF_JEDX").FieldLabel("金额大写").Name("F_JEDX").Editable(false).ReadOnly(true).MarginSpec("10px 0px 10px 0px"),
                    X.Checkbox().BoxLabel("是否记账:").BoxLabelAlign(BoxLabelAlign.Before).Name("F_JZZT").MarginSpec("10px 0px 10px 30px"),
                    X.TextField().FieldLabel("借款人员").Name("F_JKRY").MarginSpec("10px 0px 10px 0px"),
                    X.TextField().FieldLabel("备注").Name("F_Remakes").MarginSpec("10px 0px 10px 0px")),
                X.FieldSet().Title("收款项目").LayoutConfig(new TableLayoutConfig() { Columns = 3 }).Layout(LayoutType.Table)
                    .Collapsible(true).PaddingSpec("3").Items(
                        X.Checkbox().BoxLabel("磨号").InputWidth(30).BoxLabelAlign(BoxLabelAlign.Before).Name("F_MH").MarginSpec("10px 0px 10px 30px"),
                        X.Checkbox().BoxLabel("门字").BoxLabelAlign(BoxLabelAlign.Before).Name("F_MZ").MarginSpec("10px 0px 10px 30px"),
                        X.Checkbox().BoxLabel("照相").BoxLabelAlign(BoxLabelAlign.Before).Name("F_ZX").MarginSpec("10px 0px 10px 30px"),
                        X.Checkbox().BoxLabel("载重量").BoxLabelAlign(BoxLabelAlign.Before).Name("F_ZZL").MarginSpec("10px 0px 10px 30px"),
                        X.Checkbox().BoxLabel("扩大号").BoxLabelAlign(BoxLabelAlign.Before).Name("F_KDH").MarginSpec("10px 0px 10px 30px"),
                        X.Checkbox().BoxLabel("人数").BoxLabelAlign(BoxLabelAlign.Before).Name("F_RS").MarginSpec("10px 0px 10px 30px")),
                 X.FieldSet().Title("区间合计").FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; })
                 .LayoutConfig(new TableLayoutConfig() { Columns = 2 }).Layout(LayoutType.Table).Collapsible(true).PaddingSpec("3").Items(
                        X.TextField().ID("TF_EnableCount").FieldLabel("有效明细条目").MarginSpec("10px 0px 10px 0px").Editable(false).ReadOnly(true),
                        X.TextField().ID("TF_Sum").FieldLabel("收款合计").MarginSpec("10px 0px 10px 0px").Editable(false).ReadOnly(true),
                        X.TextField().ID("TF_DisableCount").FieldLabel("作废条目").MarginSpec("10px 0px 10px 0px").Editable(false).ReadOnly(true))))
        .TopBar(X.Toolbar().Items(
            X.DateField().ID("DF_BeginTime").Format("yyyy-MM-dd").Width(120)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.Label().Text("至").Width(10),
            X.DateField().ID("DF_EndTime").Format("yyyy-MM-dd").Width(120)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.ComboBox().ID("CB_Take").Width(60).Text("5").Items(
                    X.ListItem().Text("2000"),
                    X.ListItem().Text("1000"),
                    X.ListItem().Text("500"),
                    X.ListItem().Text("200"),
                    X.ListItem().Text("100"),
                    X.ListItem().Text("50"),
                    X.ListItem().Text("20"),
                    X.ListItem().Text("10"),
                    X.ListItem().Text("5"))
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.Button().Text("新增").Icon(Icon.Add).Listeners(ls => ls.Click.Fn = "AddRecord"),
            X.Button().Text("保存").Icon(Icon.Disk).Listeners(ls => ls.Click.Fn = "SaveRecord"),
            X.Button().Text("打印").Icon(Icon.Printer).Listeners(ls => ls.Click.Fn = "PrintRecord"),
            X.Button().Text("还款").Icon(Icon.ShapeMoveBack).Listeners(ls => ls.Click.Fn = "RepaymentRecord"),
            X.Button().Text("合计").Icon(Icon.Sum).Listeners(ls => ls.Click.Fn = "SumCount"),
            X.Button().Text("作废").Icon(Icon.DateDelete).Listeners(ls => ls.Click.Fn = "InvalidRecord"),
            X.Button().Text("恢复").Icon(Icon.Accept).Listeners(ls => ls.Click.Fn = "RecoveryInvalidRecord"),
            X.Button().Text("清空").Icon(Icon.Cancel).OnClientClick("#{FP_Right}.reset();"),
            X.Button().Text("刷新").Icon(Icon.Reload).OnClientClick("#{S_Left}.reload();")))))
