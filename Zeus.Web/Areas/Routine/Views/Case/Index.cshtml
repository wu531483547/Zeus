@{
    ViewBag.Title = "病例明细";
    var X = Html.X();
}
@section header{
    <script src="~/Content/js/Zeus.js"></script>
    <script type="text/javascript">
        var SelectedRecord = function (e, row) {
            if (row[0]) {
                this.up('form').getForm().reset();
                this.up('form').getForm().loadRecord(row[0]);
            }
        };
        var AddRecord = function () {
            this.up('form').getForm().reset();
            App.GP_Left.getSelectionModel().clearSelections();
            App.GP_Left.getView().refresh();
        };
        var SaveRecord = function () {
            if (App.FP_Right.getForm().isValid()) {
                $.loading(true, "正在提交数据...");
                window.setTimeout(function () {
                    $.ajax({
                        url: "/Routine/Case/SaveSingle",
                        loading: "正在提交数据...",
                        type: "post",
                        dataType: "json",
                        data: {
                            __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                            fpValue: Ext.encode(App.FP_Right.getForm().getValues()),
                            keyValue: App.GP_Left.getSelectionModel().hasSelection() ?
                                App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id : ''
                        },
                        success: function (result) {
                            if (result.state == "success") {
                                //$.modalMsg(result.message, result.state);
                                App.FP_Right.getForm().reset();
                                App.GP_Left.store.reload();
                                App.GP_Left.getSelectionModel().clearSelections();
                                App.GP_Left.getView().refresh();
                            } else {
                                $.modalAlert(result.message, result.state);
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $.loading(false);
                            $.modalMsg(errorThrown, "error");
                        },
                        complete: function () {
                            $.loading(false);
                        }
                    });
                }, 500);
            }
            else {
                return false;
            }
        };
        var DeleteRecord = function () {
            if (App.GP_Left.getSelectionModel().hasSelection()) {
                $.modalConfirm("注：您确定要删除该项数据吗？", function (r) {
                    if (r) {
                        $.loading(true, "正在提交数据...");
                        window.setTimeout(function () {
                            $.ajax({
                                url: "/Routine/Case/DeleteSingle",
                                loading: "正在提交数据...",
                                type: "post",
                                dataType: "json",
                                data: {
                                    __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(),
                                    keyValue: App.GP_Left.getSelectionModel().getSelection()[0].data.F_Id
                                },
                                success: function (result) {
                                    if (result.state == "success") {
                                        $.modalMsg(result.message, result.state);
                                        App.FP_Right.getForm().reset();
                                        App.GP_Left.store.reload();
                                        App.GP_Left.getSelectionModel().clearSelections();
                                        App.GP_Left.getView().refresh();
                                    } else {
                                        $.modalAlert(result.message, result.state);
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    $.loading(false);
                                    $.modalMsg(errorThrown, "error");
                                },
                                complete: function () {
                                    $.loading(false);
                                }
                            });
                        }, 500);
                    }
                });
            }
            else {
                $.modalMsg("请至少选中一条明细进行操作！");
            }
        };
    </script>
}
@(X.Viewport().Layout(LayoutType.Fit).Items(
        X.FormPanel().ID("FP_Main").Layout(LayoutType.Border).StyleSpec("border:1px solid #DFDFDF;").Items(
            X.GridPanel().ID("GP_Left").Region(Region.West).Width(450)
            .StyleSpec("border:1px solid #DFDFDF;border-left:0px;border-right:0px;")
            .Store(X.Store().ID("S_Left").Parameters(new
            {
                BeginTime = JRawValue.From("App.DF_BeginTime.getValue() == null ? null : App.DF_BeginTime.getValue()"),
                EndTime = JRawValue.From("App.DF_EndTime.getValue() == null ? null : App.DF_EndTime.getValue()"),
                PatientName = JRawValue.From("App.TF_PatientName.getValue() == null ? null : App.TF_PatientName.getValue()")                
            }
            ).Proxy(X.AjaxProxy().Url(Url.Action("GetList"))
            .Reader(X.JsonReader().RootProperty("data").TotalProperty("total")))).ColumnModel(
                X.RowNumbererColumn().Align(Alignment.Center).Text("序号").Width(50),
                X.Column().Text("病例单号").DataIndex("F_1").Filter(X.StringFilter().EmptyText("输入收款单号")).Width(150),
                X.Column().Text("患者姓名").DataIndex("F_2").Filter(X.StringFilter().EmptyText("输入患者姓名")).Width(100),
                X.DateColumn().Text("就诊时间").DataIndex("F_CreatorTime").Format("yyyy-MM-dd HH:mm:ss").Width(150))
            .View(X.GridView().EnableTextSelection(true).StripeRows(true).LoadingText("正在努力加载中"))
            .Plugins(X.CellEditing(), X.GridFilters().MenuFilterText("查询")).Listeners(l => l.SelectionChange.Fn = "SelectedRecord"),
            X.FormPanel().ID("FP_Right").StyleSpec("border:1px solid #DFDFDF;border-right:0px;").AutoScroll(true)
            .Layout(LayoutType.Form).Region(Region.Center).BodyStyle("overflow-x:visible;overflow-y:hidden").Items(
                X.FieldSet().Title("基本信息").FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; })
                .Layout(LayoutType.Table).LayoutConfig(new TableLayoutConfig() { Columns = 2 }).Collapsible(true).PaddingSpec("3").Items(
                    X.TextField().FieldLabel("患者姓名").Name("F_2").AllowBlank(false).MarginSpec("10px 0px 10px 0px"),
                    X.ComboBox().FieldLabel("性别").Name("F_3").Text("男").Editable(false).MarginSpec("10px 0px 10px 0px")
                    .AllowBlank(false).Items(X.ListItem().Text("男"), X.ListItem().Text("女")),
                    X.TextField().FieldLabel("年龄").Name("F_4").MarginSpec("10px 0px 10px 0px"),
                    X.TextField().FieldLabel("患病时间").Name("F_5").MarginSpec("10px 0px 10px 0px"),
                    X.TextField().FieldLabel("联系电话").Name("F_10").MarginSpec("10px 0px 10px 0px"),
                    X.ComboBox().FieldLabel("药物类别").Name("F_7").Text("西药").MarginSpec("10px 0px 10px 0px")
                    .AllowBlank(false).Items(X.ListItem().Text("西药"), X.ListItem().Text("中药"))),
                X.FieldSet().Title("患病症状与处置药物").FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; })
               .Layout(LayoutType.Column).Collapsible(true).PaddingSpec("3").Items(
                    X.TextArea().FieldLabel("症状").LabelAlign(LabelAlign.Right).ColumnWidth(1).Height(100).Name("F_6")
                    .MarginSpec("10px 20px 0px 0px").AllowBlank(false),
                    X.TextArea().FieldLabel("服用药").LabelAlign(LabelAlign.Right).ColumnWidth(1).Height(100).Name("F_9")
                    .MarginSpec("10px 20px 0px 0px").AllowBlank(false),
                    X.TextArea().FieldLabel("备注").Name("F_Remakes").ColumnWidth(1).Height(100).MarginSpec("10px 20px 0px 0px")),
                X.FieldSet().Title("禁忌药物").LayoutConfig(new TableLayoutConfig() { Columns = 2 }).Layout(LayoutType.Table)
                    .Collapsible(true).FieldDefaults(fd => { fd.LabelAlign = LabelAlign.Right; fd.LabelWidth = 90; }).PaddingSpec("3").Items(
                    X.TextField().FieldLabel("过敏药物").Text("无").Name("F_8").MarginSpec("10px 0px 10px 0px").AllowBlank(false))))
        .TopBar(X.Toolbar().Items(
            X.DateField().ID("DF_BeginTime").FieldLabel("开始时间").Format("yyyy-MM-dd").LabelWidth(60).Width(180)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.DateField().ID("DF_EndTime").FieldLabel("截至时间").Format("yyyy-MM-dd").LabelWidth(60).Width(180)
            .Margin(7).Text(@DateTime.Now.ToString()).MaxDate(@DateTime.Now).AutoDataBind(true).Editable(false)
            .Listeners(ls => ls.Select.Handler = "#{S_Left}.reload();"),
            X.TextField().ID("TF_PatientName").FieldLabel("患者姓名").LabelAlign(LabelAlign.Right).LabelWidth(80).Width(180)
            .Listeners(ls => ls.Blur.Handler = "#{S_Left}.reload();"),
            X.Button().Text("新增").Icon(Icon.Add).Width(80).Listeners(ls => ls.Click.Fn = "AddRecord"),
            X.Button().Text("保存").Icon(Icon.Disk).Listeners(ls => ls.Click.Fn = "SaveRecord"),
            X.Button().Text("删除").Width(80).Icon(Icon.Delete).Listeners(ls => ls.Click.Fn = "DeleteRecord"),
            X.Button().Text("清空").Icon(Icon.Cancel).OnClientClick("#{FP_Right}.reset();"),
            X.Button().Text("刷新").Icon(Icon.Reload).Width(80).OnClientClick("#{S_Left}.reload();")))))
